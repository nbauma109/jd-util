package org.jd.core.v1.util;

import org.apache.commons.lang3.ArrayUtils;
import org.junit.Test;

import static org.apache.bcel.Const.*;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import jd.core.model.instruction.bytecode.ByteCodeConstants;
import jd.core.process.analyzer.instruction.bytecode.util.ByteCodeUtil;

public class ByteCodeUtilTest {

    @Test
    public void testOpCodeIn() {
        byte[] code = { (byte) ILOAD_0, (byte) ILOAD_1, (byte) ARETURN, (byte) ASTORE, DUP };
        assertTrue(ByteCodeUtil.opCodeIn(code, 0, ILOAD_0, ILOAD_1, ARETURN));
        assertFalse(ByteCodeUtil.opCodeIn(code, 0, DUP, ASTORE, GETFIELD));
    }

    @Test
    public void testGetOpCode() {
        byte[] code = { (byte) ILOAD_0, (byte) ILOAD_1, (byte) ARETURN, (byte) ASTORE, DUP };
        assertEquals(ILOAD_0, ByteCodeUtil.getOpCode(code, 0));
        assertEquals(ILOAD_1, ByteCodeUtil.getOpCode(code, 1));
    }

    @Test
    public void testIsLoadIntValue() {
        assertTrue(ByteCodeUtil.isLoadIntValue(ByteCodeConstants.ICONST));
        assertTrue(ByteCodeUtil.isLoadIntValue(BIPUSH));
        assertTrue(ByteCodeUtil.isLoadIntValue(SIPUSH));
        assertFalse(ByteCodeUtil.isLoadIntValue(DUP));
    }

    @Test
    public void testIsIfInstruction() {
        assertTrue(ByteCodeUtil.isIfInstruction(ByteCodeConstants.IFCMP, true));
        assertTrue(ByteCodeUtil.isIfInstruction(ByteCodeConstants.IFXNULL, true));
        assertFalse(ByteCodeUtil.isIfInstruction(GOTO, false));
    }

    @Test
    public void testIsIfOrGotoInstruction() {
        assertTrue(ByteCodeUtil.isIfOrGotoInstruction(ByteCodeConstants.IFCMP, true));
        assertTrue(ByteCodeUtil.isIfOrGotoInstruction(GOTO, false));
        assertFalse(ByteCodeUtil.isIfOrGotoInstruction(DUP, false));
    }

    @Test
    public void testGetCmpPriority() {
        assertEquals(7, ByteCodeUtil.getCmpPriority(ByteCodeConstants.CMP_EQ));
        assertEquals(6, ByteCodeUtil.getCmpPriority(ByteCodeConstants.CMP_LT));
    }

    @Test
    public void testGetArrayRefIndex() {
        byte[] code = { (byte) ILOAD_0, (byte) ANEWARRAY, (byte) 0, (byte) 0, (byte) ARETURN };
        assertTrue(ByteCodeUtil.getArrayRefIndex(code));
        code = new byte[] { (byte) ILOAD_1, (byte) ANEWARRAY, (byte) 0, (byte) 0, (byte) ARETURN };
        assertFalse(ByteCodeUtil.getArrayRefIndex(code));
    }

    @Test
    public void testGetLoadOpCode() {
        assertEquals(ALOAD, ByteCodeUtil.getLoadOpCode(ASTORE));
        assertEquals(ILOAD, ByteCodeUtil.getLoadOpCode(ISTORE));
        assertEquals(ByteCodeConstants.LOAD, ByteCodeUtil.getLoadOpCode(ByteCodeConstants.STORE));
        assertEquals(GETFIELD, ByteCodeUtil.getLoadOpCode(PUTFIELD));
        assertEquals(GETSTATIC, ByteCodeUtil.getLoadOpCode(PUTSTATIC));
        assertEquals(-1, ByteCodeUtil.getLoadOpCode(DUP));
    }

    @Test
    public void testIsIfInstructionComplex() {
        assertTrue(ByteCodeUtil.isIfInstruction(ByteCodeConstants.COMPLEXIF, true));
        assertFalse(ByteCodeUtil.isIfInstruction(ByteCodeConstants.COMPLEXIF, false));
        assertFalse(ByteCodeUtil.isIfInstruction(IFEQ, true));
    }

    @Test
    public void testGetCmpPriorityNotEqOrNe() {
        assertEquals(6, ByteCodeUtil.getCmpPriority(ByteCodeConstants.CMP_GT));
        assertEquals(6, ByteCodeUtil.getCmpPriority(ByteCodeConstants.CMP_LT));
        assertEquals(7, ByteCodeUtil.getCmpPriority(ByteCodeConstants.CMP_NE));
    }

    @Test
    public void testGetArrayRefIndexInvalidCode() {
        byte[] code1 = { (byte) ILOAD_0, (byte) ILOAD_1, (byte) 0, (byte) 0, (byte) ARETURN };
        assertFalse(ByteCodeUtil.getArrayRefIndex(code1));
        byte[] code2 = { (byte) ILOAD_0, (byte) ANEWARRAY, (byte) 0, (byte) 0, (byte) ILOAD_0 };
        assertFalse(ByteCodeUtil.getArrayRefIndex(code2));
        byte[] code3 = { (byte) ILOAD_0, (byte) ANEWARRAY, (byte) 0, (byte) ILOAD_0 };
        assertFalse(ByteCodeUtil.getArrayRefIndex(code3));
    }

    @Test
    public void testCleanUpByteCode1() {
        byte[] code = {ALOAD_0, (byte) GETFIELD, 0, 0, ASTORE_1, ACONST_NULL, ASTORE_2, ALOAD_1, (byte) INVOKEVIRTUAL, 11, 0, ASTORE_3, ALOAD_1, ALOAD_3, (byte) INVOKESTATIC, 11, 0, ASTORE_2, ALOAD_2, (byte) INVOKESTATIC, 3, DCONST_0, (byte) ARETURN};
        byte[] expected = {ALOAD_0, (byte) GETFIELD, 0, 0, ALOAD_0, (byte) GETFIELD, 0, 0, 0, 0, 0, 0, 0, (byte) INVOKEVIRTUAL, 11, 0, (byte) INVOKESTATIC, 11, 0, (byte) INVOKESTATIC, 3, DCONST_0, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }

    @Test
    public void testCleanUpByteCode2() {
        byte[] code = {ALOAD_0, (byte) GETFIELD, 0, 9, (byte) INVOKEVIRTUAL, 0, FSTORE, (byte) INVOKEVIRTUAL, 0, DSTORE, (byte) INVOKEINTERFACE, 0, ASTORE, 1, 0, ASTORE_3, ACONST_NULL, ASTORE, 4, ALOAD_3, (byte) INVOKEVIRTUAL, 6, DASTORE, ASTORE, 5, ALOAD_3, ALOAD, 5, (byte) INVOKESTATIC, 6, POP2, ASTORE, 4, ALOAD, 4};
        byte[] expected = {ALOAD_0, (byte) GETFIELD, 0, 9, (byte) INVOKEVIRTUAL, 0, FSTORE, (byte) INVOKEVIRTUAL, 0, DSTORE, (byte) INVOKEINTERFACE, 0, ASTORE, 1, 0, ASTORE_3, ALOAD_3, ALOAD_3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (byte) INVOKEVIRTUAL, 6, DASTORE, (byte) INVOKESTATIC, 6, POP2};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode2bis() {
        byte[] code = {ALOAD_0, (byte) GETFIELD, 0, 9, (byte) INVOKEVIRTUAL, 0, FSTORE, (byte) INVOKEVIRTUAL, 0, DSTORE, (byte) INVOKEINTERFACE, 0, ASTORE, 1, 0, ASTORE, 2, ACONST_NULL, ASTORE_3, ALOAD, 2, (byte) INVOKEVIRTUAL, 6, DASTORE, ASTORE, 4, ALOAD, 2, ALOAD, 4, (byte) INVOKESTATIC, 6, POP2, ASTORE_3, ALOAD_3};
        byte[] expected = {ALOAD_0, (byte) GETFIELD, 0, 9, (byte) INVOKEVIRTUAL, 0, FSTORE, (byte) INVOKEVIRTUAL, 0, DSTORE, (byte) INVOKEINTERFACE, 0, ASTORE, 1, 0, ASTORE, 2, ALOAD, 2, ALOAD, 2, 0, 0, 0, 0, 0, 0, 0, 0, (byte) INVOKEVIRTUAL, 6, 82, (byte) INVOKESTATIC, 6, POP2};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode3() {
        byte[] code = {ALOAD_0, (byte) GETFIELD, 0, 10, (byte) INVOKEINTERFACE, 0, 11, 1, 0, ASTORE, 4, ALOAD, 4, (byte) IFNULL, 0, LLOAD_1, ALOAD_2, (byte) IFNULL, 0, ILOAD_1, ALOAD_1, (byte) IFNULL, 0, FLOAD, ALOAD, 4, ALOAD_1, ALOAD_2, ALOAD_3, (byte) INVOKEINTERFACE, 0, 12, 4, 0, ASTORE, 5, ALOAD, 5, (byte) IFNULL, 0, 6, ALOAD, 5, (byte) ARETURN, ALOAD_3, (byte) ARETURN};
        byte[] expected = {ALOAD_0, (byte) GETFIELD, 0, 10, (byte) INVOKEINTERFACE, 0, 11, 1, 0, ASTORE, 4, ALOAD, 4, (byte) IFNULL, 0, LLOAD_1, ALOAD_2, (byte) IFNULL, 0, ILOAD_1, ALOAD_1, (byte) IFNULL, 0, FLOAD, ALOAD, 4, ALOAD_1, ALOAD_2, ALOAD_3, (byte) INVOKEINTERFACE, 0, 12, 4, 0, ASTORE, 5, ALOAD, 5, (byte) IFNULL, 0, 6, ALOAD, 5, (byte) ARETURN, ALOAD_3, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode4() {
        byte[] code = {ALOAD_0, (byte) GETFIELD, 0, 10, (byte) INVOKEINTERFACE, 0, SIPUSH, 1, 0, ASTORE_1, 1, ASTORE_2, ALOAD_1, (byte) IFNULL, 0, FLOAD_3, ALOAD_1, (byte) ARRAYLENGTH, (byte) ANEWARRAY, 0, LDC, ASTORE_2, 3, ISTORE_3, ALOAD_2, (byte) IFNULL, 0, ALOAD, ILOAD_3, ALOAD_2, (byte) ARRAYLENGTH, (byte) IF_ICMPGE, 0, LDC_W, ALOAD_2, ILOAD_3, ALOAD_0, ALOAD_1, ILOAD_3, AALOAD, (byte) INVOKEVIRTUAL, 0, LDC_W, AASTORE, (byte) IINC, 3, 1, (byte) GOTO, 0, 0, ALOAD_2, (byte) ARETURN};
        byte[] expected = {ALOAD_0, (byte) GETFIELD, 0, 10, (byte) INVOKEINTERFACE, 0, SIPUSH, 1, 0, ASTORE_1, 1, ASTORE_2, ALOAD_1, (byte) IFNULL, 0, FLOAD_3, ALOAD_1, (byte) ARRAYLENGTH, (byte) ANEWARRAY, 0, LDC, ASTORE_2, 3, ISTORE_3, ALOAD_2, (byte) IFNULL, 0, ALOAD, ILOAD_3, ALOAD_2, (byte) ARRAYLENGTH, (byte) IF_ICMPGE, 0, LDC_W, ALOAD_2, ILOAD_3, ALOAD_0, ALOAD_1, ILOAD_3, AALOAD, (byte) INVOKEVIRTUAL, 0, LDC_W, AASTORE, (byte) IINC, 3, 1, (byte) GOTO, 0, 0, ALOAD_2, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode5() {
        byte[] code = {ALOAD_1, (byte) CHECKCAST, 0, 2, ASTORE_3, ACONST_NULL, ASTORE, 4, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 3, (byte) IFNULL, 1, (byte) INVOKEINTERFACE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 3, ASTORE, 5, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 5, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, DCONST_1, ALOAD, 5, (byte) INVOKESTATIC, 0, 7, ALOAD, 5, ASTORE, 6, ALOAD, 6, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 8, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, ISTORE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, 13, (byte) INVOKEVIRTUAL, 0, DCONST_0, LSTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, LLOAD, 8, (byte) INVOKESTATIC, 0, BIPUSH, ALOAD, 5, ASTORE, 10, ALOAD, 10, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, SIPUSH, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, ISTORE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, 13, (byte) INVOKEVIRTUAL, 0, DCONST_0, LSTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, LLOAD, 8, (byte) INVOKESTATIC, 0, LDC, ALOAD, 5, ASTORE, 10, ALOAD, 10, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, LDC_W, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, ISTORE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, ILOAD, ISTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, ILOAD, 8, (byte) INVOKESTATIC, 0, LLOAD, ALOAD, 5, ASTORE, 9, ALOAD, 9, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, FLOAD, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, ISTORE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, ILOAD, ISTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, ILOAD, 8, (byte) INVOKESTATIC, 0, DLOAD, ALOAD, 5, ASTORE, 9, ALOAD, 9, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, ALOAD, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, CALOAD, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, ILOAD, ISTORE, 8, ALOAD, 5, ILOAD, 8, (byte) INVOKESTATIC, 0, ILOAD_0, POP, ALOAD, 5, ASTORE, 9, ALOAD, 9, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, ILOAD_1, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, BIPUSH, ALOAD, 5, (byte) INVOKESTATIC, 0, ILOAD_2, POP, ALOAD, 5, ASTORE, 6, ALOAD, 6, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, ILOAD_3, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, 11, ALOAD, 5, (byte) INVOKESTATIC, 0, LLOAD_0, (byte) GOTO, 0, SALOAD, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, LLOAD_1, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, BIPUSH, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, LLOAD_2, (byte) INVOKESTATIC, 0, LLOAD_3, ASTORE, 6, ALOAD, 6, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, FLOAD_0, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, BIPUSH, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, (byte) INVOKESTATIC, 0, FLOAD_1, ASTORE, 6, ALOAD, 6, (byte) ARETURN, (byte) GOTO, 0, ALOAD, ASTORE, 5, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, FLOAD_3, LDC, DLOAD_0, ALOAD, 5, (byte) INVOKESTATIC, 0, DLOAD_1, (byte) GOTO, 0, 8, ASTORE, 11, ALOAD, 11, (byte) ATHROW, ALOAD, 4, (byte) ARETURN};
        byte[] expected = {ALOAD_1, (byte) CHECKCAST, 0, 2, ASTORE_3, 1, ASTORE, 4, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 3, (byte) IFNULL, 1, (byte) INVOKEINTERFACE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 3, ASTORE, 5, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 5, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, DCONST_1, ALOAD, 5, (byte) INVOKESTATIC, 0, 7, ALOAD, 5, ASTORE, 6, ALOAD, 6, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 8, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, ISTORE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, 13, (byte) INVOKEVIRTUAL, 0, DCONST_0, LSTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, LLOAD, 8, (byte) INVOKESTATIC, 0, BIPUSH, ALOAD, 5, ASTORE, 10, ALOAD, 10, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, SIPUSH, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, ISTORE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, 13, (byte) INVOKEVIRTUAL, 0, DCONST_0, LSTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, LLOAD, 8, (byte) INVOKESTATIC, 0, LDC, ALOAD, 5, ASTORE, 10, ALOAD, 10, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, LDC_W, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, ISTORE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, ILOAD, ISTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, ILOAD, 8, (byte) INVOKESTATIC, 0, LLOAD, ALOAD, 5, ASTORE, 9, ALOAD, 9, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, FLOAD, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, ISTORE, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, ILOAD, ISTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, ILOAD, 8, (byte) INVOKESTATIC, 0, DLOAD, ALOAD, 5, ASTORE, 9, ALOAD, 9, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, ALOAD, (byte) INVOKEVIRTUAL, 0, 9, (byte) IFEQ, 0, CALOAD, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, 10, (byte) INVOKEVIRTUAL, 0, 11, ISTORE, 6, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, ILOAD, 6, 4, IADD, (byte) INVOKEVIRTUAL, 0, 12, ASTORE, 7, ALOAD, 7, (byte) INVOKESTATIC, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, ILOAD, ISTORE, 8, ALOAD, 5, ILOAD, 8, (byte) INVOKESTATIC, 0, ILOAD_0, POP, ALOAD, 5, ASTORE, 9, ALOAD, 9, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, ILOAD_1, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, BIPUSH, ALOAD, 5, (byte) INVOKESTATIC, 0, ILOAD_2, POP, ALOAD, 5, ASTORE, 6, ALOAD, 6, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, ILOAD_3, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, 11, ALOAD, 5, (byte) INVOKESTATIC, 0, LLOAD_0, (byte) GOTO, 0, SALOAD, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, LLOAD_1, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, BIPUSH, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, LLOAD_2, (byte) INVOKESTATIC, 0, LLOAD_3, ASTORE, 6, ALOAD, 6, (byte) ARETURN, ALOAD_3, (byte) INVOKEVIRTUAL, 0, 4, LDC, FLOAD_0, (byte) INVOKEVIRTUAL, 0, 6, (byte) IFEQ, 0, BIPUSH, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DCONST_1, (byte) INVOKESTATIC, 0, FLOAD_1, ASTORE, 6, ALOAD, 6, (byte) ARETURN, (byte) GOTO, 0, ALOAD, ASTORE, 5, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, FLOAD_3, LDC, DLOAD_0, ALOAD, 5, (byte) INVOKESTATIC, 0, DLOAD_1, (byte) GOTO, 0, 8, ASTORE, 11, ALOAD, 11, (byte) ATHROW, ALOAD, 4, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode6() {
        byte[] code = {ALOAD_0, (byte) GETFIELD, 0, 2, (byte) IFNULL, 0, ALOAD, ALOAD_1, 4, (byte) INVOKEINTERFACE, 0, 5, 2, 0, ALOAD_1, 3, (byte) INVOKEINTERFACE, 0, 6, 2, 0, ALOAD_0, (byte) GETFIELD, 0, 2, ALOAD_1, (byte) INVOKEVIRTUAL, 0, 7, ALOAD_0, (byte) GETFIELD, 0, 3, ALOAD_1, (byte) INVOKESTATIC, 0, 8, (byte) RETURN};
        byte[] expected = {ALOAD_0, (byte) GETFIELD, 0, 2, (byte) IFNULL, 0, ALOAD, ALOAD_1, 4, (byte) INVOKEINTERFACE, 0, 5, 2, 0, ALOAD_1, 3, (byte) INVOKEINTERFACE, 0, 6, 2, 0, ALOAD_0, (byte) GETFIELD, 0, 2, ALOAD_1, (byte) INVOKEVIRTUAL, 0, 7, ALOAD_0, (byte) GETFIELD, 0, 3, ALOAD_1, (byte) INVOKESTATIC, 0, 8, (byte) RETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode7() {
        byte[] code = {ALOAD_1, (byte) INVOKEVIRTUAL, 0, LALOAD, ASTORE_2, (byte) INVOKESTATIC, 0, FLOAD_3, LDC, ISTORE_0, (byte) INVOKESTATIC, 0, ALOAD_3, ASTORE_3, 1, ALOAD_2, (byte) IF_ACMPEQ, 0, ILOAD_3, ALOAD_3, (byte) NEW, 0, LDC, DUP, (byte) INVOKESPECIAL, 0, LDC_W, ALOAD_2, (byte) INVOKEVIRTUAL, 0, ILOAD, LDC, ISTORE_1, (byte) INVOKEVIRTUAL, 0, ILOAD, (byte) INVOKEVIRTUAL, 0, ILOAD_0, (byte) INVOKEVIRTUAL, 0, BALOAD, (byte) IFNE, 0, 8, ALOAD_0, (byte) GETFIELD, 0, 7, (byte) ARETURN, (byte) NEW, 0, LDC, DUP, (byte) INVOKESPECIAL, 0, LDC_W, ALOAD_2, (byte) INVOKEVIRTUAL, 0, ILOAD, LDC, ISTORE_1, (byte) INVOKEVIRTUAL, 0, ILOAD, (byte) INVOKEVIRTUAL, 0, ILOAD_0, (byte) ARETURN};
        byte[] expected = {ALOAD_1, (byte) INVOKEVIRTUAL, 0, LALOAD, ASTORE_2, (byte) INVOKESTATIC, 0, FLOAD_3, LDC, ISTORE_0, (byte) INVOKESTATIC, 0, ALOAD_3, ASTORE_3, 1, ALOAD_2, (byte) IF_ACMPEQ, 0, ILOAD_3, ALOAD_3, (byte) NEW, 0, LDC, DUP, (byte) INVOKESPECIAL, 0, LDC_W, ALOAD_2, (byte) INVOKEVIRTUAL, 0, ILOAD, LDC, ISTORE_1, (byte) INVOKEVIRTUAL, 0, ILOAD, (byte) INVOKEVIRTUAL, 0, ILOAD_0, (byte) INVOKEVIRTUAL, 0, BALOAD, (byte) IFNE, 0, 8, ALOAD_0, (byte) GETFIELD, 0, 7, (byte) ARETURN, (byte) NEW, 0, LDC, DUP, (byte) INVOKESPECIAL, 0, LDC_W, ALOAD_2, (byte) INVOKEVIRTUAL, 0, ILOAD, LDC, ISTORE_1, (byte) INVOKEVIRTUAL, 0, ILOAD, (byte) INVOKEVIRTUAL, 0, ILOAD_0, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode8() {
        byte[] code = {ALOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD, ASTORE_3, ACONST_NULL, ASTORE, 4, 3, (byte) INVOKESTATIC, 0, (byte) I2D, ASTORE, 5, (byte) NEW, 1, 10, DUP, ALOAD_0, (byte) INVOKESPECIAL, 1, 11, ASTORE, 6, ALOAD, 6, 9, (byte) INVOKEVIRTUAL, 1, 12, POP, ALOAD, 6, LDC_W, 1, 13, (byte) INVOKEVIRTUAL, 1, DCONST_0, (byte) CHECKCAST, 1, DCONST_1, ASTORE, 4, ALOAD_2, (byte) IFNULL, 0, ILOAD, ALOAD_2, (byte) INVOKEINTERFACE, 1, 7, 1, 0, (byte) IFNE, 0, 12, ALOAD, 4, ALOAD_2, (byte) INVOKEINTERFACE, 1, BIPUSH, 2, 0, POP, ALOAD_1, ALOAD_0, ALOAD_1, ALOAD, 4, (byte) INVOKEVIRTUAL, 1, SIPUSH, (byte) INVOKEVIRTUAL, 0, (byte) GETSTATIC, ALOAD_3, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD, (byte) IF_ACMPNE, 0, 7, 3, (byte) GOTO, 0, 4, 4, (byte) INVOKESTATIC, 0, (byte) I2D, ASTORE, 5, ALOAD_1, (byte) INVOKESTATIC, 1, LDC, (byte) INVOKEVIRTUAL, 1, LDC_W, ALOAD_0, ALOAD_1, (byte) INVOKEVIRTUAL, 0, (byte) F2L, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DUP2, (byte) IFEQ, 0, POP, ALOAD_0, (byte) NEW, 0, LDC, DUP, (byte) INVOKESPECIAL, 0, LDC_W, ALOAD_3, (byte) INVOKEVIRTUAL, 0, ILOAD, LDC_W, 1, LDC2_W, (byte) INVOKEVIRTUAL, 0, ILOAD, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD, (byte) INVOKEVIRTUAL, 0, ILOAD, LDC_W, 1, ILOAD, (byte) INVOKEVIRTUAL, 0, ILOAD, (byte) INVOKEVIRTUAL, 0, ILOAD_0, LDC_W, 1, LLOAD, 3, (byte) INVOKESTATIC, 0, 0, (byte) LOOKUPSWITCH, 0, 0, 0, 0, 0, 0, ALOAD_1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, ILOAD_2, 0, 0, 0, 1, 0, 0, 0, LLOAD_1, (byte) GOTO, 0, DCONST_1, ALOAD_1, ALOAD_3, (byte) INVOKEVIRTUAL, 0, (byte) GETSTATIC, ALOAD_0, ALOAD_1, (byte) INVOKEVIRTUAL, 0, (byte) F2L, 1, (byte) ARETURN, ALOAD_1, (byte) ARETURN};
        byte[] expected = {ALOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD, ASTORE_3, 1, ASTORE, 4, 3, (byte) INVOKESTATIC, 0, (byte) I2D, ASTORE, 5, (byte) NEW, 1, 10, DUP, ALOAD_0, (byte) INVOKESPECIAL, 1, 11, ASTORE, 6, ALOAD, 6, 9, (byte) INVOKEVIRTUAL, 1, 12, POP, ALOAD, 6, LDC_W, 1, 13, (byte) INVOKEVIRTUAL, 1, DCONST_0, (byte) CHECKCAST, 1, DCONST_1, ASTORE, 4, ALOAD_2, (byte) IFNULL, 0, ILOAD, ALOAD_2, (byte) INVOKEINTERFACE, 1, 7, 1, 0, (byte) IFNE, 0, 12, ALOAD, 4, ALOAD_2, (byte) INVOKEINTERFACE, 1, BIPUSH, 2, 0, POP, ALOAD_1, ALOAD_0, ALOAD_1, ALOAD, 4, (byte) INVOKEVIRTUAL, 1, SIPUSH, (byte) INVOKEVIRTUAL, 0, (byte) GETSTATIC, ALOAD_3, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD, (byte) IF_ACMPNE, 0, 7, 3, (byte) GOTO, 0, 4, 4, (byte) INVOKESTATIC, 0, (byte) I2D, ASTORE, 5, ALOAD_1, (byte) INVOKESTATIC, 1, LDC, (byte) INVOKEVIRTUAL, 1, LDC_W, ALOAD_0, ALOAD_1, (byte) INVOKEVIRTUAL, 0, (byte) F2L, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DUP2, (byte) IFEQ, 0, POP, ALOAD_0, (byte) NEW, 0, LDC, DUP, (byte) INVOKESPECIAL, 0, LDC_W, ALOAD_3, (byte) INVOKEVIRTUAL, 0, ILOAD, LDC_W, 1, LDC2_W, (byte) INVOKEVIRTUAL, 0, ILOAD, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD, (byte) INVOKEVIRTUAL, 0, ILOAD, LDC_W, 1, ILOAD, (byte) INVOKEVIRTUAL, 0, ILOAD, (byte) INVOKEVIRTUAL, 0, ILOAD_0, LDC_W, 1, LLOAD, 3, (byte) INVOKESTATIC, 0, 0, (byte) LOOKUPSWITCH, 0, 0, 0, 0, 0, 0, ALOAD_1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, ILOAD_2, 0, 0, 0, 1, 0, 0, 0, LLOAD_1, (byte) GOTO, 0, DCONST_1, ALOAD_1, ALOAD_3, (byte) INVOKEVIRTUAL, 0, (byte) GETSTATIC, ALOAD_0, ALOAD_1, (byte) INVOKEVIRTUAL, 0, (byte) F2L, 1, (byte) ARETURN, ALOAD_1, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode9() {
        byte[] code = {ALOAD_0, (byte) INVOKEVIRTUAL, 0, ILOAD_2, (byte) IFNONNULL, 0, 7, 1, (byte) GOTO, 0, BIPUSH, ALOAD_0, (byte) INVOKEVIRTUAL, 0, ILOAD_2, (byte) CHECKCAST, 0, DCONST_1, (byte) INVOKEVIRTUAL, 0, ILOAD_3, (byte) CHECKCAST, 0, ALOAD, (byte) ARETURN};
        byte[] expected = {ALOAD_0, (byte) INVOKEVIRTUAL, 0, ILOAD_2, (byte) IFNONNULL, 0, 7, 1, (byte) GOTO, 0, BIPUSH, ALOAD_0, (byte) INVOKEVIRTUAL, 0, ILOAD_2, (byte) CHECKCAST, 0, DCONST_1, (byte) INVOKEVIRTUAL, 0, ILOAD_3, (byte) CHECKCAST, 0, ALOAD, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode10() {
        byte[] code = {ALOAD_0, (byte) INVOKEVIRTUAL, 0, LSTORE, ASTORE_1, ALOAD_1, (byte) INVOKEVIRTUAL, 0, FSTORE, 2, (byte) IF_ICMPNE, 0, 4, (byte) RETURN, ALOAD_1, (byte) INVOKEVIRTUAL, 0, DSTORE, ASTORE_2, ALOAD_2, ALOAD_2, BIPUSH, IALOAD, (byte) INVOKEVIRTUAL, 0, ASTORE, 4, IADD, (byte) INVOKEVIRTUAL, 0, ISTORE_0, ASTORE_3, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ISTORE_1, (byte) INVOKEVIRTUAL, 0, ISTORE_2, ASTORE, 4, ALOAD_3, ALOAD, 4, (byte) INVOKEVIRTUAL, 0, ISTORE_3, (byte) IFNE, 0, ILOAD_2, ALOAD_2, (byte) NEW, 0, SIPUSH, DUP, (byte) INVOKESPECIAL, 0, LDC, LDC, LSTORE_0, (byte) INVOKEVIRTUAL, 0, LDC2_W, ALOAD, 4, (byte) INVOKEVIRTUAL, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, FLOAD, (byte) INVOKEVIRTUAL, 0, LSTORE_1, ASTORE_2, (byte) NEW, 0, LSTORE_2, DUP, (byte) INVOKESPECIAL, 0, LSTORE_3, ASTORE, 5, ALOAD, 5, LDC, FSTORE_0, (byte) INVOKEVIRTUAL, 0, FSTORE_1, ALOAD, 5, 4, (byte) INVOKEVIRTUAL, 0, FSTORE_2, ALOAD, 5, ALOAD_0, (byte) INVOKEVIRTUAL, 0, FSTORE_3, (byte) IFNE, 0, 01, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DSTORE_0, (byte) INVOKEVIRTUAL, 0, DSTORE_1, ASTORE, 6, (byte) NEW, 0, DSTORE_2, DUP, (byte) NEW, 0, SIPUSH, DUP, (byte) INVOKESPECIAL, 0, LDC, ALOAD, 6, (byte) INVOKEVIRTUAL, 0, LDC2_W, LDC, DSTORE_3, (byte) INVOKEVIRTUAL, 0, LDC2_W, ALOAD_2, (byte) INVOKEVIRTUAL, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, FLOAD, (byte) INVOKESPECIAL, 0, ASTORE_0, ASTORE, 7, 1, ASTORE, 8, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ASTORE_1, (byte) IFEQ, 0, DCONST_1, ALOAD, 7, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ASTORE_2, (byte) INVOKEVIRTUAL, 0, ASTORE_3, (byte) GOTO, 0, LALOAD, ALOAD_1, (byte) INVOKEVIRTUAL, 0, IASTORE, (byte) IFNONNULL, 0, ILOAD, ALOAD, 7, ALOAD_1, (byte) INVOKEVIRTUAL, 0, LASTORE, (byte) INVOKEVIRTUAL, 0, FASTORE, (byte) INVOKEVIRTUAL, 0, DASTORE, (byte) INVOKEVIRTUAL, 0, ASTORE_3, (byte) GOTO, 0, LLOAD, ALOAD, 7, ALOAD_1, (byte) INVOKEVIRTUAL, 0, LASTORE, (byte) INVOKEVIRTUAL, 0, FASTORE, ALOAD_1, (byte) INVOKEVIRTUAL, 0, IASTORE, (byte) INVOKEVIRTUAL, 0, AASTORE, (byte) INVOKEVIRTUAL, 0, ASTORE_3, ALOAD, 7, (byte) IFNULL, 0, CASTORE, ALOAD, 8, (byte) IFNULL, 0, FLOAD, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, BASTORE, (byte) GOTO, 0, DSTORE_1, ASTORE, 9, ALOAD, 8, ALOAD, 9, (byte) INVOKEVIRTUAL, 0, SASTORE, (byte) GOTO, 0, ISTORE_1, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, BASTORE, (byte) GOTO, 0, CALOAD, ASTORE, 9, ALOAD, 9, ASTORE, 8, ALOAD, 9, (byte) ATHROW, ASTORE, 10, ALOAD, 7, (byte) IFNULL, 0, LLOAD_3, ALOAD, 8, (byte) IFNULL, 0, FLOAD, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, BASTORE, (byte) GOTO, 0, LDC2_W, ASTORE, 11, ALOAD, 8, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, SASTORE, (byte) GOTO, 0, 8, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, BASTORE, ALOAD, 10, (byte) ATHROW, (byte) GOTO, 0, 11, ASTORE, 7, ALOAD_0, ALOAD, 7, (byte) INVOKESTATIC, 0, POP2, (byte) GOTO, 0, 4, (byte) RETURN, (byte) RETURN};
        byte[] expected = {ALOAD_0, (byte) INVOKEVIRTUAL, 0, LSTORE, ASTORE_1, ALOAD_1, (byte) INVOKEVIRTUAL, 0, FSTORE, 2, (byte) IF_ICMPNE, 0, 4, (byte) RETURN, ALOAD_1, (byte) INVOKEVIRTUAL, 0, DSTORE, ASTORE_2, ALOAD_2, ALOAD_2, BIPUSH, IALOAD, (byte) INVOKEVIRTUAL, 0, ASTORE, 4, IADD, (byte) INVOKEVIRTUAL, 0, ISTORE_0, ASTORE_3, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ISTORE_1, (byte) INVOKEVIRTUAL, 0, ISTORE_2, ASTORE, 4, ALOAD_3, ALOAD, 4, (byte) INVOKEVIRTUAL, 0, ISTORE_3, (byte) IFNE, 0, ILOAD_2, ALOAD_2, (byte) NEW, 0, SIPUSH, DUP, (byte) INVOKESPECIAL, 0, LDC, LDC, LSTORE_0, (byte) INVOKEVIRTUAL, 0, LDC2_W, ALOAD, 4, (byte) INVOKEVIRTUAL, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, FLOAD, (byte) INVOKEVIRTUAL, 0, LSTORE_1, ASTORE_2, (byte) NEW, 0, LSTORE_2, DUP, (byte) INVOKESPECIAL, 0, LSTORE_3, ASTORE, 5, ALOAD, 5, LDC, FSTORE_0, (byte) INVOKEVIRTUAL, 0, FSTORE_1, ALOAD, 5, 4, (byte) INVOKEVIRTUAL, 0, FSTORE_2, ALOAD, 5, ALOAD_0, (byte) INVOKEVIRTUAL, 0, FSTORE_3, (byte) IFNE, 0, 01, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, DSTORE_0, (byte) INVOKEVIRTUAL, 0, DSTORE_1, ASTORE, 6, (byte) NEW, 0, DSTORE_2, DUP, (byte) NEW, 0, SIPUSH, DUP, (byte) INVOKESPECIAL, 0, LDC, ALOAD, 6, (byte) INVOKEVIRTUAL, 0, LDC2_W, LDC, DSTORE_3, (byte) INVOKEVIRTUAL, 0, LDC2_W, ALOAD_2, (byte) INVOKEVIRTUAL, 0, LDC2_W, (byte) INVOKEVIRTUAL, 0, FLOAD, (byte) INVOKESPECIAL, 0, ASTORE_0, ASTORE, 7, 1, ASTORE, 8, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ASTORE_1, (byte) IFEQ, 0, DCONST_1, ALOAD, 7, ALOAD_1, (byte) INVOKEVIRTUAL, 0, ASTORE_2, (byte) INVOKEVIRTUAL, 0, ASTORE_3, (byte) GOTO, 0, LALOAD, ALOAD_1, (byte) INVOKEVIRTUAL, 0, IASTORE, (byte) IFNONNULL, 0, ILOAD, ALOAD, 7, ALOAD_1, (byte) INVOKEVIRTUAL, 0, LASTORE, (byte) INVOKEVIRTUAL, 0, FASTORE, (byte) INVOKEVIRTUAL, 0, DASTORE, (byte) INVOKEVIRTUAL, 0, ASTORE_3, (byte) GOTO, 0, LLOAD, ALOAD, 7, ALOAD_1, (byte) INVOKEVIRTUAL, 0, LASTORE, (byte) INVOKEVIRTUAL, 0, FASTORE, ALOAD_1, (byte) INVOKEVIRTUAL, 0, IASTORE, (byte) INVOKEVIRTUAL, 0, AASTORE, (byte) INVOKEVIRTUAL, 0, ASTORE_3, ALOAD, 7, (byte) IFNULL, 0, CASTORE, ALOAD, 8, (byte) IFNULL, 0, FLOAD, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, BASTORE, (byte) GOTO, 0, DSTORE_1, ASTORE, 9, ALOAD, 8, ALOAD, 9, (byte) INVOKEVIRTUAL, 0, SASTORE, (byte) GOTO, 0, ISTORE_1, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, BASTORE, (byte) GOTO, 0, CALOAD, ASTORE, 9, ALOAD, 9, ASTORE, 8, ALOAD, 9, (byte) ATHROW, ASTORE, 10, ALOAD, 7, (byte) IFNULL, 0, LLOAD_3, ALOAD, 8, (byte) IFNULL, 0, FLOAD, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, BASTORE, (byte) GOTO, 0, LDC2_W, ASTORE, 11, ALOAD, 8, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, SASTORE, (byte) GOTO, 0, 8, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, BASTORE, ALOAD, 10, (byte) ATHROW, (byte) GOTO, 0, 11, ASTORE, 7, ALOAD_0, ALOAD, 7, (byte) INVOKESTATIC, 0, POP2, (byte) GOTO, 0, 4, (byte) RETURN, (byte) RETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode11() {
        byte[] code = {ALOAD_0, (byte) GETFIELD, 0, 4, (byte) INVOKESTATIC, 0, ISTORE_3, ASTORE_1, ACONST_NULL, ASTORE_2, ALOAD_1, (byte) INVOKEVIRTUAL, 0, LSTORE_0, ASTORE_3, ALOAD_3, (byte) INVOKEINTERFACE, 0, LSTORE_1, 1, 0, (byte) IFEQ, 0, CALOAD, ALOAD_3, (byte) INVOKEINTERFACE, 0, LSTORE_2, 1, 0, (byte) CHECKCAST, 0, ISTORE_0, ASTORE, 4, ALOAD_2, (byte) IFNONNULL, 0, 9, ALOAD, 4, ASTORE_2, (byte) GOTO, 0, ILOAD_2, (byte) NEW, 0, LSTORE_3, DUP, (byte) INVOKESPECIAL, 0, FSTORE_0, ALOAD_2, (byte) INVOKEVIRTUAL, 0, FSTORE_1, LDC, FSTORE_2, (byte) INVOKEVIRTUAL, 0, FSTORE_1, ALOAD, 4, (byte) INVOKEVIRTUAL, 0, FSTORE_1, (byte) INVOKEVIRTUAL, 0, FSTORE_3, ASTORE_2, (byte) GOTO, 0, 0, ALOAD_2, (byte) ARETURN};
        byte[] expected = {ALOAD_0, (byte) GETFIELD, 0, 4, (byte) INVOKESTATIC, 0, ISTORE_3, ASTORE_1, 1, ASTORE_2, ALOAD_1, (byte) INVOKEVIRTUAL, 0, LSTORE_0, ASTORE_3, ALOAD_3, (byte) INVOKEINTERFACE, 0, LSTORE_1, 1, 0, (byte) IFEQ, 0, CALOAD, ALOAD_3, (byte) INVOKEINTERFACE, 0, LSTORE_2, 1, 0, (byte) CHECKCAST, 0, ISTORE_0, ASTORE, 4, ALOAD_2, (byte) IFNONNULL, 0, 9, ALOAD, 4, ASTORE_2, (byte) GOTO, 0, ILOAD_2, (byte) NEW, 0, LSTORE_3, DUP, (byte) INVOKESPECIAL, 0, FSTORE_0, ALOAD_2, (byte) INVOKEVIRTUAL, 0, FSTORE_1, LDC, FSTORE_2, (byte) INVOKEVIRTUAL, 0, FSTORE_1, ALOAD, 4, (byte) INVOKEVIRTUAL, 0, FSTORE_1, (byte) INVOKEVIRTUAL, 0, FSTORE_3, ASTORE_2, (byte) GOTO, 0, 0, ALOAD_2, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode12() {
        byte[] code = {ALOAD_0, (byte) INVOKEVIRTUAL, 0, ISTORE_1, ASTORE, 7, (byte) NEW, 0, 2, DUP, (byte) INVOKESPECIAL, 0, 3, ASTORE, 8, 3, ISTORE, 9, ILOAD, 9, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, ISTORE_2, (byte) IF_ICMPGE, 0, LLOAD_1, ALOAD, 8, ALOAD, 7, ILOAD, 9, (byte) INVOKEVIRTUAL, 0, ISTORE_3, ALOAD, 7, ILOAD, 9, (byte) INVOKEVIRTUAL, 0, ISTORE_3, (byte) INVOKEINTERFACE, 0, ALOAD_0, 3, 0, POP, (byte) IINC, 9, 1, (byte) GOTO, 0, 01, (byte) NEW, 0, LSTORE_0, DUP, (byte) INVOKESPECIAL, 0, LSTORE_1, ASTORE, 7, (byte) NEW, 0, LSTORE_2, DUP, (byte) INVOKESPECIAL, 0, LSTORE_3, ASTORE, 9, ALOAD_1, (byte) IFNULL, 0, DUP, ALOAD_1, (byte) INVOKEINTERFACE, 0, FSTORE_0, 1, 0, (byte) INVOKEINTERFACE, 0, FSTORE_1, 1, 0, ASTORE, 10, ALOAD, 10, (byte) INVOKEINTERFACE, 0, LSTORE, 1, 0, (byte) IFEQ, 0, LSTORE_3, ALOAD, 10, (byte) INVOKEINTERFACE, 0, FSTORE, 1, 0, (byte) CHECKCAST, 0, FSTORE_2, ASTORE, 11, ALOAD, 9, ALOAD, 11, ALOAD_1, ALOAD, 11, (byte) INVOKEINTERFACE, 0, DSTORE, 2, 0, (byte) INVOKEVIRTUAL, 0, FSTORE_3, POP, ALOAD, 8, ALOAD, 11, ALOAD, 11, (byte) INVOKEINTERFACE, 0, ALOAD_0, 3, 0, POP, ALOAD, 8, ALOAD, 11, (byte) INVOKEINTERFACE, 0, DSTORE, 2, 0, (byte) IFNULL, 0, 11, ALOAD, 7, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, DSTORE_0, POP, (byte) GOTO, 0, (byte) INVOKEDYNAMIC, ALOAD_0, (byte) INVOKEVIRTUAL, 0, DSTORE_1, ASTORE, 12, 3, ISTORE, 13, ILOAD, 13, ALOAD, 12, (byte) INVOKEVIRTUAL, 0, ISTORE_2, (byte) IF_ICMPGE, 0, SALOAD, ALOAD, 12, ILOAD, 13, (byte) INVOKEVIRTUAL, 0, ISTORE_3, (byte) CHECKCAST, 0, DSTORE_2, ASTORE, 10, (byte) NEW, 0, FSTORE_2, DUP, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, DSTORE_3, (byte) INVOKESPECIAL, 0, ASTORE_0, ASTORE, 11, ALOAD, 9, ALOAD, 11, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, FSTORE_3, POP, ALOAD, 7, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, DSTORE_0, POP, (byte) IINC, 13, 1, (byte) GOTO, 0, (byte) IFNONNULL, (byte) INVOKESTATIC, 0, ASTORE_1, LDC, ASTORE_2, (byte) INVOKESTATIC, 0, ASTORE_3, ASTORE, 13, (byte) NEW, 0, LSTORE_0, DUP, (byte) INVOKESPECIAL, 0, LSTORE_1, ASTORE, DCONST_1, (byte) NEW, 0, 2, DUP, (byte) INVOKESPECIAL, 0, 3, ASTORE, BIPUSH, (byte) NEW, 0, 2, DUP, (byte) INVOKESPECIAL, 0, 3, ASTORE, SIPUSH, ALOAD, 13, (byte) INVOKEINTERFACE, 0, ISTORE, 1, 0, ASTORE, LDC_W, ALOAD, LDC_W, (byte) INVOKEINTERFACE, 0, LSTORE, 1, 0, (byte) IFEQ, 0, (byte) IF_ICMPLT, ALOAD, LDC_W, (byte) INVOKEINTERFACE, 0, FSTORE, 1, 0, (byte) CHECKCAST, 0, LLOAD_3, ASTORE, LDC2_W, 1, ASTORE, LDC, ALOAD, 4, (byte) IFNULL, 0, SIPUSH, ALOAD, 4, ALOAD, LDC2_W, (byte) INVOKEINTERFACE, 0, DSTORE, 2, 0, (byte) CHECKCAST, 0, 6, ASTORE, LDC, ALOAD, LDC, (byte) IFNONNULL, 0, SIPUSH, (byte) NEW, 0, 6, DUP, ALOAD, LDC2_W, (byte) GETSTATIC, 0, IASTORE, (byte) INVOKESPECIAL, 0, 9, ASTORE, LDC, ALOAD, DCONST_1, ALOAD, LDC, (byte) INVOKEINTERFACE, 0, ALOAD_1, 2, 0, POP, ALOAD_2, ALOAD, LDC, (byte) INVOKEVIRTUAL, 0, LASTORE, ALOAD, SIPUSH, ALOAD, LDC2_W, ALOAD, LDC, (byte) INVOKEINTERFACE, 0, ALOAD_0, 3, 0, POP, (byte) INVOKESTATIC, 0, ASTORE_1, (byte) NEW, 0, FASTORE, DUP, (byte) INVOKESPECIAL, 0, DASTORE, LDC, AASTORE, (byte) INVOKEVIRTUAL, 0, BASTORE, ALOAD, LDC2_W, (byte) INVOKEVIRTUAL, 0, BASTORE, (byte) INVOKEVIRTUAL, 0, CASTORE, (byte) INVOKESTATIC, 0, ASTORE_3, ASTORE, DCONST_0, ALOAD, DCONST_0, (byte) INVOKEINTERFACE, 0, ISTORE, 1, 0, ASTORE, ILOAD, ALOAD, ILOAD, (byte) INVOKEINTERFACE, 0, LSTORE, 1, 0, (byte) IFEQ, 0, LLOAD_0, ALOAD, ILOAD, (byte) INVOKEINTERFACE, 0, FSTORE, 1, 0, (byte) CHECKCAST, 0, LLOAD_3, ASTORE, LLOAD, ALOAD, BIPUSH, ALOAD, LLOAD, ALOAD, LDC, (byte) INVOKEINTERFACE, 0, ALOAD_0, 3, 0, POP, (byte) GOTO, 0, 00, (byte) GOTO, 0, DUP_X2, 4, ALOAD_0, ALOAD_2, ALOAD, BIPUSH, ALOAD, 5, ALOAD, 6, ALOAD, 7, ALOAD, 9, ALOAD_3, (byte) INVOKESTATIC, 0, SASTORE, ALOAD, DCONST_1, (byte) INVOKEINTERFACE, 0, ISTORE, 1, 0, ASTORE, LDC_W, ALOAD, LDC_W, (byte) INVOKEINTERFACE, 0, LSTORE, 1, 0, (byte) IFEQ, 0, LLOAD_2, ALOAD, LDC_W, (byte) INVOKEINTERFACE, 0, FSTORE, 1, 0, (byte) CHECKCAST, 0, 6, ASTORE, LDC2_W, ALOAD, LDC2_W, (byte) INVOKEVIRTUAL, 0, POP, (byte) IFNE, 0, 9, ALOAD_2, ALOAD, LDC2_W, (byte) INVOKEVIRTUAL, 0, POP2, (byte) GOTO, 0, 0, ALOAD, SIPUSH, (byte) ARETURN};
        byte[] expected = {ALOAD_0, (byte) INVOKEVIRTUAL, 0, ISTORE_1, ASTORE, 7, (byte) NEW, 0, 2, DUP, (byte) INVOKESPECIAL, 0, 3, ASTORE, 8, 3, ISTORE, 9, ILOAD, 9, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, ISTORE_2, (byte) IF_ICMPGE, 0, LLOAD_1, ALOAD, 8, ALOAD, 7, ILOAD, 9, (byte) INVOKEVIRTUAL, 0, ISTORE_3, ALOAD, 7, ILOAD, 9, (byte) INVOKEVIRTUAL, 0, ISTORE_3, (byte) INVOKEINTERFACE, 0, ALOAD_0, 3, 0, POP, (byte) IINC, 9, 1, (byte) GOTO, 0, 01, (byte) NEW, 0, LSTORE_0, DUP, (byte) INVOKESPECIAL, 0, LSTORE_1, ASTORE, 7, (byte) NEW, 0, LSTORE_2, DUP, (byte) INVOKESPECIAL, 0, LSTORE_3, ASTORE, 9, ALOAD_1, (byte) IFNULL, 0, DUP, ALOAD_1, (byte) INVOKEINTERFACE, 0, FSTORE_0, 1, 0, (byte) INVOKEINTERFACE, 0, FSTORE_1, 1, 0, ASTORE, 10, ALOAD, 10, (byte) INVOKEINTERFACE, 0, LSTORE, 1, 0, (byte) IFEQ, 0, LSTORE_3, ALOAD, 10, (byte) INVOKEINTERFACE, 0, FSTORE, 1, 0, (byte) CHECKCAST, 0, FSTORE_2, ASTORE, 11, ALOAD, 9, ALOAD, 11, ALOAD_1, ALOAD, 11, (byte) INVOKEINTERFACE, 0, DSTORE, 2, 0, (byte) INVOKEVIRTUAL, 0, FSTORE_3, POP, ALOAD, 8, ALOAD, 11, ALOAD, 11, (byte) INVOKEINTERFACE, 0, ALOAD_0, 3, 0, POP, ALOAD, 8, ALOAD, 11, (byte) INVOKEINTERFACE, 0, DSTORE, 2, 0, (byte) IFNULL, 0, 11, ALOAD, 7, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, DSTORE_0, POP, (byte) GOTO, 0, (byte) INVOKEDYNAMIC, ALOAD_0, (byte) INVOKEVIRTUAL, 0, DSTORE_1, ASTORE, 12, 3, ISTORE, 13, ILOAD, 13, ALOAD, 12, (byte) INVOKEVIRTUAL, 0, ISTORE_2, (byte) IF_ICMPGE, 0, SALOAD, ALOAD, 12, ILOAD, 13, (byte) INVOKEVIRTUAL, 0, ISTORE_3, (byte) CHECKCAST, 0, DSTORE_2, ASTORE, 10, (byte) NEW, 0, FSTORE_2, DUP, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, DSTORE_3, (byte) INVOKESPECIAL, 0, ASTORE_0, ASTORE, 11, ALOAD, 9, ALOAD, 11, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, FSTORE_3, POP, ALOAD, 7, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, DSTORE_0, POP, (byte) IINC, 13, 1, (byte) GOTO, 0, (byte) IFNONNULL, (byte) INVOKESTATIC, 0, ASTORE_1, LDC, ASTORE_2, (byte) INVOKESTATIC, 0, ASTORE_3, ASTORE, 13, (byte) NEW, 0, LSTORE_0, DUP, (byte) INVOKESPECIAL, 0, LSTORE_1, ASTORE, DCONST_1, (byte) NEW, 0, 2, DUP, (byte) INVOKESPECIAL, 0, 3, ASTORE, BIPUSH, (byte) NEW, 0, 2, DUP, (byte) INVOKESPECIAL, 0, 3, ASTORE, SIPUSH, ALOAD, 13, (byte) INVOKEINTERFACE, 0, ISTORE, 1, 0, ASTORE, LDC_W, ALOAD, LDC_W, (byte) INVOKEINTERFACE, 0, LSTORE, 1, 0, (byte) IFEQ, 0, (byte) IF_ICMPLT, ALOAD, LDC_W, (byte) INVOKEINTERFACE, 0, FSTORE, 1, 0, (byte) CHECKCAST, 0, LLOAD_3, ASTORE, LDC2_W, 1, ASTORE, LDC, ALOAD, 4, (byte) IFNULL, 0, SIPUSH, ALOAD, 4, ALOAD, LDC2_W, (byte) INVOKEINTERFACE, 0, DSTORE, 2, 0, (byte) CHECKCAST, 0, 6, ASTORE, LDC, ALOAD, LDC, (byte) IFNONNULL, 0, SIPUSH, (byte) NEW, 0, 6, DUP, ALOAD, LDC2_W, (byte) GETSTATIC, 0, IASTORE, (byte) INVOKESPECIAL, 0, 9, ASTORE, LDC, ALOAD, DCONST_1, ALOAD, LDC, (byte) INVOKEINTERFACE, 0, ALOAD_1, 2, 0, POP, ALOAD_2, ALOAD, LDC, (byte) INVOKEVIRTUAL, 0, LASTORE, ALOAD, SIPUSH, ALOAD, LDC2_W, ALOAD, LDC, (byte) INVOKEINTERFACE, 0, ALOAD_0, 3, 0, POP, (byte) INVOKESTATIC, 0, ASTORE_1, (byte) NEW, 0, FASTORE, DUP, (byte) INVOKESPECIAL, 0, DASTORE, LDC, AASTORE, (byte) INVOKEVIRTUAL, 0, BASTORE, ALOAD, LDC2_W, (byte) INVOKEVIRTUAL, 0, BASTORE, (byte) INVOKEVIRTUAL, 0, CASTORE, (byte) INVOKESTATIC, 0, ASTORE_3, ASTORE, DCONST_0, ALOAD, DCONST_0, (byte) INVOKEINTERFACE, 0, ISTORE, 1, 0, ASTORE, ILOAD, ALOAD, ILOAD, (byte) INVOKEINTERFACE, 0, LSTORE, 1, 0, (byte) IFEQ, 0, LLOAD_0, ALOAD, ILOAD, (byte) INVOKEINTERFACE, 0, FSTORE, 1, 0, (byte) CHECKCAST, 0, LLOAD_3, ASTORE, LLOAD, ALOAD, BIPUSH, ALOAD, LLOAD, ALOAD, LDC, (byte) INVOKEINTERFACE, 0, ALOAD_0, 3, 0, POP, (byte) GOTO, 0, 00, (byte) GOTO, 0, DUP_X2, 4, ALOAD_0, ALOAD_2, ALOAD, BIPUSH, ALOAD, 5, ALOAD, 6, ALOAD, 7, ALOAD, 9, ALOAD_3, (byte) INVOKESTATIC, 0, SASTORE, ALOAD, DCONST_1, (byte) INVOKEINTERFACE, 0, ISTORE, 1, 0, ASTORE, LDC_W, ALOAD, LDC_W, (byte) INVOKEINTERFACE, 0, LSTORE, 1, 0, (byte) IFEQ, 0, LLOAD_2, ALOAD, LDC_W, (byte) INVOKEINTERFACE, 0, FSTORE, 1, 0, (byte) CHECKCAST, 0, 6, ASTORE, LDC2_W, ALOAD, LDC2_W, (byte) INVOKEVIRTUAL, 0, POP, (byte) IFNE, 0, 9, ALOAD_2, ALOAD, LDC2_W, (byte) INVOKEVIRTUAL, 0, POP2, (byte) GOTO, 0, 0, ALOAD, SIPUSH, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode13() {
        byte[] code = {(byte) NEW, 0, DLOAD_1, DUP, (byte) INVOKESPECIAL, 0, DLOAD_2, ASTORE_1, (byte) NEW, 0, DLOAD_3, DUP, (byte) INVOKESPECIAL, 0, ALOAD_0, ASTORE_2, ALOAD_0, (byte) GETFIELD, 0, ILOAD_2, (byte) INSTANCEOF, 0, ALOAD_1, (byte) IFEQ, 0, ASTORE, ALOAD_0, (byte) GETFIELD, 0, ILOAD_2, (byte) CHECKCAST, 0, ALOAD_1, ASTORE_3, ALOAD_3, (byte) INVOKEVIRTUAL, 0, ALOAD_2, (byte) CHECKCAST, 0, ALOAD_1, ASTORE_3, ALOAD_0, ALOAD_3, ALOAD_0, (byte) GETFIELD, 0, LLOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD_3, ALOAD_3, ALOAD_0, (byte) GETFIELD, 0, LLOAD_1, (byte) GETSTATIC, 0, IALOAD, (byte) INVOKEVIRTUAL, 0, LALOAD, (byte) CHECKCAST, 0, FALOAD, (byte) INVOKEVIRTUAL, 0, AALOAD, ALOAD_3, 4, (byte) INVOKEVIRTUAL, 0, AALOAD, ALOAD_3, (byte) INVOKEVIRTUAL, 0, BALOAD, ASTORE_2, (byte) GOTO, 0, FSTORE_1, ALOAD_0, (byte) GETFIELD, 0, ILOAD_2, (byte) INSTANCEOF, 0, CALOAD, (byte) IFEQ, 0, ASTORE, ALOAD_0, (byte) GETFIELD, 0, ILOAD_2, (byte) CHECKCAST, 0, CALOAD, ASTORE_3, ALOAD_3, (byte) INVOKEVIRTUAL, 0, SALOAD, (byte) CHECKCAST, 0, CALOAD, ASTORE_3, ALOAD_0, ALOAD_3, ALOAD_0, (byte) GETFIELD, 0, LLOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD_3, ALOAD_3, ALOAD_0, (byte) GETFIELD, 0, LLOAD_1, (byte) GETSTATIC, 0, IALOAD, (byte) INVOKEVIRTUAL, 0, LALOAD, (byte) CHECKCAST, 0, FALOAD, (byte) INVOKEVIRTUAL, 0, ISTORE, ALOAD_3, (byte) INVOKESTATIC, 0, LSTORE, (byte) INVOKEVIRTUAL, 0, FSTORE, POP, ALOAD_3, (byte) INVOKEVIRTUAL, 0, DSTORE, ASTORE_2, 1, ASTORE_3, ALOAD_2, (byte) INVOKEVIRTUAL, 0, ASTORE, ASTORE, 4, ALOAD, 4, (byte) INVOKEINTERFACE, 0, ISTORE_0, 1, 0, (byte) IFEQ, 1, LDC2_W, ALOAD, 4, (byte) INVOKEINTERFACE, 0, ISTORE_1, 1, 0, (byte) CHECKCAST, 0, ISTORE_2, ASTORE, 5, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, ISTORE_3, ASTORE, 6, ALOAD, 6, (byte) INVOKESTATIC, 0, LSTORE_0, ISTORE, 7, ALOAD, 5, (byte) INSTANCEOF, 0, LSTORE_1, (byte) IFEQ, 0, (byte) L2F, ALOAD, 5, (byte) CHECKCAST, 0, LSTORE_1, ASTORE, 8, ALOAD, 8, (byte) INVOKEVIRTUAL, 0, LSTORE_2, (byte) INVOKEINTERFACE, 0, LSTORE_3, 1, 0, ASTORE, 9, ALOAD, 9, (byte) INVOKEINTERFACE, 0, ISTORE_0, 1, 0, (byte) IFEQ, 0, LMUL, ALOAD, 9, (byte) INVOKEINTERFACE, 0, ISTORE_1, 1, 0, (byte) CHECKCAST, 0, FSTORE_0, ASTORE, 10, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, FSTORE_1, ASTORE, 11, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, FSTORE_2, DSTORE, 12, ALOAD_3, (byte) IFNONNULL, 0, LDC_W, DLOAD, 12, DCONST_0, (byte) DCMPG, (byte) IFGE, 0, 7, 2, (byte) GOTO, 0, 4, 4, (byte) INVOKESTATIC, 0, FSTORE_3, ASTORE_3, (byte) NEW, 0, DSTORE_0, DUP, (byte) INVOKESPECIAL, 0, DSTORE_1, ASTORE, DCONST_0, ALOAD, DCONST_0, (byte) GETSTATIC, 0, FLOAD_1, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, DSTORE_2, ALOAD, DCONST_0, (byte) GETSTATIC, 0, FLOAD_3, (byte) NEW, 0, DSTORE_3, DUP, ALOAD_3, (byte) INVOKEVIRTUAL, 0, ASTORE_0, (byte) I2D, DLOAD, 12, DMUL, ILOAD, 7, (byte) INVOKESPECIAL, 0, ASTORE_1, (byte) INVOKEVIRTUAL, 0, DSTORE_2, ALOAD_1, ALOAD, DCONST_0, (byte) INVOKEINTERFACE, 0, 36, 2, 0, POP, (byte) GOTO, 0, (byte) I2S, (byte) GOTO, 0, LMUL, ALOAD, 5, (byte) INSTANCEOF, 0, ASTORE_2, (byte) IFEQ, 0, LADD, ALOAD, 5, (byte) CHECKCAST, 0, ASTORE_2, ASTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, ASTORE_3, ASTORE, 9, ALOAD, 8, (byte) INVOKEVIRTUAL, 0, IASTORE, DSTORE, 10, ALOAD_3, (byte) IFNONNULL, 0, LDC_W, DLOAD, 10, DCONST_0, (byte) DCMPG, (byte) IFGE, 0, 7, 2, (byte) GOTO, 0, 4, 4, (byte) INVOKESTATIC, 0, FSTORE_3, ASTORE_3, (byte) NEW, 0, DSTORE_0, DUP, (byte) INVOKESPECIAL, 0, DSTORE_1, ASTORE, 12, ALOAD, 12, (byte) GETSTATIC, 0, FLOAD_1, ALOAD, 9, (byte) INVOKEVIRTUAL, 0, DSTORE_2, ALOAD, 12, (byte) GETSTATIC, 0, FLOAD_3, (byte) NEW, 0, DSTORE_3, DUP, ALOAD_3, (byte) INVOKEVIRTUAL, 0, ASTORE_0, (byte) I2D, DLOAD, 10, DMUL, ILOAD, 7, (byte) INVOKESPECIAL, 0, ASTORE_1, (byte) INVOKEVIRTUAL, 0, DSTORE_2, ALOAD_1, ALOAD, 12, (byte) INVOKEINTERFACE, 0, 36, 2, 0, POP, (byte) GOTO, 0, 0, ALOAD_1, (byte) INVOKESTATIC, 0, LASTORE, (byte) GOTO, 0, 9, ASTORE_2, ALOAD_0, ALOAD_2, (byte) INVOKESTATIC, 0, DASTORE, ALOAD_1, (byte) ARETURN};
        byte[] expected = {(byte) NEW, 0, DLOAD_1, DUP, (byte) INVOKESPECIAL, 0, DLOAD_2, ASTORE_1, (byte) NEW, 0, DLOAD_3, DUP, (byte) INVOKESPECIAL, 0, ALOAD_0, ASTORE_2, ALOAD_0, (byte) GETFIELD, 0, ILOAD_2, (byte) INSTANCEOF, 0, ALOAD_1, (byte) IFEQ, 0, ASTORE, ALOAD_0, (byte) GETFIELD, 0, ILOAD_2, (byte) CHECKCAST, 0, ALOAD_1, ASTORE_3, ALOAD_3, (byte) INVOKEVIRTUAL, 0, ALOAD_2, (byte) CHECKCAST, 0, ALOAD_1, ASTORE_3, ALOAD_0, ALOAD_3, ALOAD_0, (byte) GETFIELD, 0, LLOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD_3, ALOAD_3, ALOAD_0, (byte) GETFIELD, 0, LLOAD_1, (byte) GETSTATIC, 0, IALOAD, (byte) INVOKEVIRTUAL, 0, LALOAD, (byte) CHECKCAST, 0, FALOAD, (byte) INVOKEVIRTUAL, 0, AALOAD, ALOAD_3, 4, (byte) INVOKEVIRTUAL, 0, AALOAD, ALOAD_3, (byte) INVOKEVIRTUAL, 0, BALOAD, ASTORE_2, (byte) GOTO, 0, FSTORE_1, ALOAD_0, (byte) GETFIELD, 0, ILOAD_2, (byte) INSTANCEOF, 0, CALOAD, (byte) IFEQ, 0, ASTORE, ALOAD_0, (byte) GETFIELD, 0, ILOAD_2, (byte) CHECKCAST, 0, CALOAD, ASTORE_3, ALOAD_3, (byte) INVOKEVIRTUAL, 0, SALOAD, (byte) CHECKCAST, 0, CALOAD, ASTORE_3, ALOAD_0, ALOAD_3, ALOAD_0, (byte) GETFIELD, 0, LLOAD_1, (byte) INVOKEVIRTUAL, 0, ALOAD_3, ALOAD_3, ALOAD_0, (byte) GETFIELD, 0, LLOAD_1, (byte) GETSTATIC, 0, IALOAD, (byte) INVOKEVIRTUAL, 0, LALOAD, (byte) CHECKCAST, 0, FALOAD, (byte) INVOKEVIRTUAL, 0, ISTORE, ALOAD_3, (byte) INVOKESTATIC, 0, LSTORE, (byte) INVOKEVIRTUAL, 0, FSTORE, POP, ALOAD_3, (byte) INVOKEVIRTUAL, 0, DSTORE, ASTORE_2, 1, ASTORE_3, ALOAD_2, (byte) INVOKEVIRTUAL, 0, ASTORE, ASTORE, 4, ALOAD, 4, (byte) INVOKEINTERFACE, 0, ISTORE_0, 1, 0, (byte) IFEQ, 1, LDC2_W, ALOAD, 4, (byte) INVOKEINTERFACE, 0, ISTORE_1, 1, 0, (byte) CHECKCAST, 0, ISTORE_2, ASTORE, 5, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, ISTORE_3, ASTORE, 6, ALOAD, 6, (byte) INVOKESTATIC, 0, LSTORE_0, ISTORE, 7, ALOAD, 5, (byte) INSTANCEOF, 0, LSTORE_1, (byte) IFEQ, 0, (byte) L2F, ALOAD, 5, (byte) CHECKCAST, 0, LSTORE_1, ASTORE, 8, ALOAD, 8, (byte) INVOKEVIRTUAL, 0, LSTORE_2, (byte) INVOKEINTERFACE, 0, LSTORE_3, 1, 0, ASTORE, 9, ALOAD, 9, (byte) INVOKEINTERFACE, 0, ISTORE_0, 1, 0, (byte) IFEQ, 0, LMUL, ALOAD, 9, (byte) INVOKEINTERFACE, 0, ISTORE_1, 1, 0, (byte) CHECKCAST, 0, FSTORE_0, ASTORE, 10, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, FSTORE_1, ASTORE, 11, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, FSTORE_2, DSTORE, 12, ALOAD_3, (byte) IFNONNULL, 0, LDC_W, DLOAD, 12, DCONST_0, (byte) DCMPG, (byte) IFGE, 0, 7, 2, (byte) GOTO, 0, 4, 4, (byte) INVOKESTATIC, 0, FSTORE_3, ASTORE_3, (byte) NEW, 0, DSTORE_0, DUP, (byte) INVOKESPECIAL, 0, DSTORE_1, ASTORE, DCONST_0, ALOAD, DCONST_0, (byte) GETSTATIC, 0, FLOAD_1, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, DSTORE_2, ALOAD, DCONST_0, (byte) GETSTATIC, 0, FLOAD_3, (byte) NEW, 0, DSTORE_3, DUP, ALOAD_3, (byte) INVOKEVIRTUAL, 0, ASTORE_0, (byte) I2D, DLOAD, 12, DMUL, ILOAD, 7, (byte) INVOKESPECIAL, 0, ASTORE_1, (byte) INVOKEVIRTUAL, 0, DSTORE_2, ALOAD_1, ALOAD, DCONST_0, (byte) INVOKEINTERFACE, 0, 36, 2, 0, POP, (byte) GOTO, 0, (byte) I2S, (byte) GOTO, 0, LMUL, ALOAD, 5, (byte) INSTANCEOF, 0, ASTORE_2, (byte) IFEQ, 0, LADD, ALOAD, 5, (byte) CHECKCAST, 0, ASTORE_2, ASTORE, 8, ALOAD, 5, (byte) INVOKEVIRTUAL, 0, ASTORE_3, ASTORE, 9, ALOAD, 8, (byte) INVOKEVIRTUAL, 0, IASTORE, DSTORE, 10, ALOAD_3, (byte) IFNONNULL, 0, LDC_W, DLOAD, 10, DCONST_0, (byte) DCMPG, (byte) IFGE, 0, 7, 2, (byte) GOTO, 0, 4, 4, (byte) INVOKESTATIC, 0, FSTORE_3, ASTORE_3, (byte) NEW, 0, DSTORE_0, DUP, (byte) INVOKESPECIAL, 0, DSTORE_1, ASTORE, 12, ALOAD, 12, (byte) GETSTATIC, 0, FLOAD_1, ALOAD, 9, (byte) INVOKEVIRTUAL, 0, DSTORE_2, ALOAD, 12, (byte) GETSTATIC, 0, FLOAD_3, (byte) NEW, 0, DSTORE_3, DUP, ALOAD_3, (byte) INVOKEVIRTUAL, 0, ASTORE_0, (byte) I2D, DLOAD, 10, DMUL, ILOAD, 7, (byte) INVOKESPECIAL, 0, ASTORE_1, (byte) INVOKEVIRTUAL, 0, DSTORE_2, ALOAD_1, ALOAD, 12, (byte) INVOKEINTERFACE, 0, 36, 2, 0, POP, (byte) GOTO, 0, 0, ALOAD_1, (byte) INVOKESTATIC, 0, LASTORE, (byte) GOTO, 0, 9, ASTORE_2, ALOAD_0, ALOAD_2, (byte) INVOKESTATIC, 0, DASTORE, ALOAD_1, (byte) ARETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode14() {
        byte[] code = {ALOAD_0, (byte) INVOKEVIRTUAL, 1, ALOAD, (byte) IFEQ, 0, DLOAD, LDC_W, 1, ILOAD_0, ALOAD_0, (byte) INVOKEVIRTUAL, 0, LSTORE_2, (byte) INVOKESTATIC, 0, (byte) IINC, (byte) IFEQ, 0, 10, ALOAD_0, (byte) INVOKEVIRTUAL, 1, ILOAD_1, (byte) GOTO, 0, 4, (byte) RETURN, ALOAD_0, (byte) INVOKEVIRTUAL, 1, ILOAD_2, ASTORE_2, 1, ASTORE_3, ALOAD_2, (byte) INVOKEVIRTUAL, 0, (byte) IRETURN, ASTORE_3, (byte) GOTO, 0, 11, ASTORE, 4, ALOAD_0, ALOAD, 4, (byte) INVOKESTATIC, 0, (byte) GETFIELD, ALOAD_2, (byte) INVOKEVIRTUAL, 0, BASTORE, 3, (byte) INVOKEVIRTUAL, 1, ILOAD_3, ALOAD_2, (byte) INVOKESTATIC, 1, LLOAD_0, ASTORE, 4, ALOAD, 4, ALOAD, 4, (byte) INVOKEVIRTUAL, 1, LLOAD_1, (byte) INVOKEVIRTUAL, 0, 0, (byte) INVOKEVIRTUAL, 1, 11, ALOAD_2, ALOAD_0, (byte) INVOKEVIRTUAL, 0, LSTORE_2, (byte) INVOKESTATIC, 1, LLOAD_2, (byte) IFNE, 0, 9, ALOAD_0, ALOAD_3, (byte) INVOKEVIRTUAL, 0, LMUL, (byte) RETURN, ALOAD_0, ALOAD, 4, (byte) INVOKEVIRTUAL, 0, IMUL, ALOAD_0, (byte) INVOKEVIRTUAL, 0, LSTORE_2, (byte) INVOKEVIRTUAL, 0, DREM, ALOAD, 4, (byte) INVOKEVIRTUAL, 1, LLOAD_3, ALOAD_0, ALOAD, 4, (byte) INVOKEVIRTUAL, 1, FLOAD_0, ALOAD_0, ALOAD_2, (byte) INVOKEVIRTUAL, 1, FLOAD_1, ALOAD_0, 4, (byte) INVOKEVIRTUAL, 0, BIPUSH, (byte) RETURN};
        byte[] expected = {ALOAD_0, (byte) INVOKEVIRTUAL, 1, ALOAD, (byte) IFEQ, 0, DLOAD, LDC_W, 1, ILOAD_0, ALOAD_0, (byte) INVOKEVIRTUAL, 0, LSTORE_2, (byte) INVOKESTATIC, 0, (byte) IINC, (byte) IFEQ, 0, 10, ALOAD_0, (byte) INVOKEVIRTUAL, 1, ILOAD_1, (byte) GOTO, 0, 4, (byte) RETURN, ALOAD_0, (byte) INVOKEVIRTUAL, 1, ILOAD_2, ASTORE_2, 1, ASTORE_3, ALOAD_2, (byte) INVOKEVIRTUAL, 0, (byte) IRETURN, ASTORE_3, (byte) GOTO, 0, 11, ASTORE, 4, ALOAD_0, ALOAD, 4, (byte) INVOKESTATIC, 0, (byte) GETFIELD, ALOAD_2, (byte) INVOKEVIRTUAL, 0, BASTORE, 3, (byte) INVOKEVIRTUAL, 1, ILOAD_3, ALOAD_2, (byte) INVOKESTATIC, 1, LLOAD_0, ASTORE, 4, ALOAD, 4, ALOAD, 4, (byte) INVOKEVIRTUAL, 1, LLOAD_1, (byte) INVOKEVIRTUAL, 0, 0, (byte) INVOKEVIRTUAL, 1, 11, ALOAD_2, ALOAD_0, (byte) INVOKEVIRTUAL, 0, LSTORE_2, (byte) INVOKESTATIC, 1, LLOAD_2, (byte) IFNE, 0, 9, ALOAD_0, ALOAD_3, (byte) INVOKEVIRTUAL, 0, LMUL, (byte) RETURN, ALOAD_0, ALOAD, 4, (byte) INVOKEVIRTUAL, 0, IMUL, ALOAD_0, (byte) INVOKEVIRTUAL, 0, LSTORE_2, (byte) INVOKEVIRTUAL, 0, DREM, ALOAD, 4, (byte) INVOKEVIRTUAL, 1, LLOAD_3, ALOAD_0, ALOAD, 4, (byte) INVOKEVIRTUAL, 1, FLOAD_0, ALOAD_0, ALOAD_2, (byte) INVOKEVIRTUAL, 1, FLOAD_1, ALOAD_0, 4, (byte) INVOKEVIRTUAL, 0, BIPUSH, (byte) RETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
    }
    
    @Test
    public void testCleanUpByteCode15() {
        byte[] code = {ALOAD_2, (byte) INVOKEVIRTUAL, 0, (byte) F2L, LDC, (byte) L2D, (byte) INVOKEVIRTUAL, 0, (byte) D2L, (byte) CHECKCAST, 0, (byte) D2F, ASTORE, 4, ALOAD_2, (byte) INVOKEVIRTUAL, 0, (byte) F2L, LDC, (byte) D2I, (byte) INVOKEVIRTUAL, 0, (byte) D2L, (byte) CHECKCAST, 0, (byte) D2F, ASTORE, 5, ALOAD_0, (byte) INVOKEVIRTUAL, 0, (byte) I2B, (byte) INVOKEVIRTUAL, 0, (byte) I2C, ASTORE, 6, ALOAD_1, (byte) INVOKEVIRTUAL, 0, DUP_X2, (byte) CHECKCAST, 0, DUP2, ASTORE, 7, 1, ASTORE, 8, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, (byte) I2S, ASTORE, 9, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, (byte) LCMP, ASTORE, 10, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, (byte) FCMPL, ASTORE, 11, ALOAD, 11, (byte) IFNULL, 0, 10, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, (byte) FCMPG, ASTORE, 8, ALOAD, 6, (byte) IFNULL, 0, FLOAD_1, ALOAD, 4, (byte) INVOKESTATIC, 0, (byte) DCMPL, (byte) IFNE, 0, ILOAD_1, ALOAD, 6, ALOAD, 4, (byte) INVOKESTATIC, 0, (byte) DCMPG, (byte) INVOKEVIRTUAL, 0, (byte) IFEQ, ASTORE, 9, (byte) GETSTATIC, 0, (byte) IFNE, ALOAD, 9, ALOAD, 8, (byte) INVOKEVIRTUAL, 0, (byte) IFLT, ASTORE, 9, ALOAD, 9, (byte) IFNULL, 0, FLOAD_1, ALOAD, 5, (byte) INVOKESTATIC, 0, (byte) DCMPL, (byte) IFNE, 0, ILOAD_1, ALOAD, 9, ALOAD, 5, (byte) INVOKESTATIC, 0, (byte) DCMPG, (byte) INVOKEVIRTUAL, 0, (byte) IFEQ, ASTORE, 10, (byte) GETSTATIC, 0, (byte) IFNE, ALOAD, 10, ALOAD, 8, (byte) INVOKEVIRTUAL, 0, (byte) IFLT, ASTORE, 10, ALOAD, 7, ALOAD, 9, (byte) INVOKEVIRTUAL, 0, (byte) IFGE, ALOAD, 7, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, 0, ALOAD_1, LDC, (byte) L2D, (byte) INVOKEVIRTUAL, 0, (byte) IFLE, ALOAD_1, LDC, (byte) D2I, (byte) INVOKEVIRTUAL, 0, (byte) IFLE, (byte) RETURN};
        byte[] expected = {ALOAD_2, (byte) INVOKEVIRTUAL, 0, (byte) F2L, LDC, (byte) L2D, (byte) INVOKEVIRTUAL, 0, (byte) D2L, (byte) CHECKCAST, 0, (byte) D2F, ASTORE, 4, ALOAD_2, (byte) INVOKEVIRTUAL, 0, (byte) F2L, LDC, (byte) D2I, (byte) INVOKEVIRTUAL, 0, (byte) D2L, (byte) CHECKCAST, 0, (byte) D2F, ASTORE, 5, ALOAD_0, (byte) INVOKEVIRTUAL, 0, (byte) I2B, (byte) INVOKEVIRTUAL, 0, (byte) I2C, ASTORE, 6, ALOAD_1, (byte) INVOKEVIRTUAL, 0, DUP_X2, (byte) CHECKCAST, 0, DUP2, ASTORE, 7, 1, ASTORE, 8, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, (byte) I2S, ASTORE, 9, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, (byte) LCMP, ASTORE, 10, ALOAD, 7, (byte) INVOKEVIRTUAL, 0, (byte) FCMPL, ASTORE, 11, ALOAD, 11, (byte) IFNULL, 0, 10, ALOAD, 11, (byte) INVOKEVIRTUAL, 0, (byte) FCMPG, ASTORE, 8, ALOAD, 6, (byte) IFNULL, 0, FLOAD_1, ALOAD, 4, (byte) INVOKESTATIC, 0, (byte) DCMPL, (byte) IFNE, 0, ILOAD_1, ALOAD, 6, ALOAD, 4, (byte) INVOKESTATIC, 0, (byte) DCMPG, (byte) INVOKEVIRTUAL, 0, (byte) IFEQ, ASTORE, 9, (byte) GETSTATIC, 0, (byte) IFNE, ALOAD, 9, ALOAD, 8, (byte) INVOKEVIRTUAL, 0, (byte) IFLT, ASTORE, 9, ALOAD, 9, (byte) IFNULL, 0, FLOAD_1, ALOAD, 5, (byte) INVOKESTATIC, 0, (byte) DCMPL, (byte) IFNE, 0, ILOAD_1, ALOAD, 9, ALOAD, 5, (byte) INVOKESTATIC, 0, (byte) DCMPG, (byte) INVOKEVIRTUAL, 0, (byte) IFEQ, ASTORE, 10, (byte) GETSTATIC, 0, (byte) IFNE, ALOAD, 10, ALOAD, 8, (byte) INVOKEVIRTUAL, 0, (byte) IFLT, ASTORE, 10, ALOAD, 7, ALOAD, 9, (byte) INVOKEVIRTUAL, 0, (byte) IFGE, ALOAD, 7, ALOAD, 10, (byte) INVOKEVIRTUAL, 0, 0, ALOAD_1, LDC, (byte) L2D, (byte) INVOKEVIRTUAL, 0, (byte) IFLE, ALOAD_1, LDC, (byte) D2I, (byte) INVOKEVIRTUAL, 0, (byte) IFLE, (byte) RETURN};
        assertArrayEquals(expected, ByteCodeUtil.cleanUpByteCode(code));
        assertArrayEquals(ArrayUtils.subarray(expected, 0, 58), ByteCodeUtil.cleanUpByteCode(ArrayUtils.subarray(code, 0, 58)));
    }

}